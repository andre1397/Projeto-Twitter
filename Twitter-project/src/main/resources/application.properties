#variaveis de ambiente para serem usadas na classe SecutiryConfig.java, a aplicação vai buscar o conteúdo desses arquivos abaixo (chaves privada e publica) e inserir nas variáveis da classe pra validar o JWT.
jwt.public.key=classpath:app.pub
jwt.private.key=classpath:app.key


# Enables the DATA.SQL for DATABASE. Permite usar o arquivo data.sql para popular o banco de dados.
spring.sql.init.mode=always

#faz com que o spring espere o banco de dados estar pronto para inicializar o schema e inserir os itens no banco
spring.jpa.defer-datasource-initialization=true

#Faz com que hibernate atualize o schema do banco de dados automaticamente sem a necessidade de fazer os comandos CRUD manualmente toda vez que for inserido um dado novo
spring.jpa.hibernate.ddl-auto=update 

# Configurações de conexão do banco de dados MySQL, ela pode ser feita também por meio de uma variável de ambiente, mas aqui vamos fazer diretamente no arquivo de configuração
spring.datasource.url=jdbc:mysql://localhost:3306/mydb

# Configurações de acesso ao BD
spring.datasource.username=admin
spring.datasource.password=123

# Configurações do driver JDBC
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Exibe (dá um print) no terminal toda query que for exeutada no SQL
spring.jpa.show-sql=true